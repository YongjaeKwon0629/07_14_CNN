## 1. 개요 (Overview)

### 🧠 CNN이란 무엇인가요?

**Convolutional Neural Network (CNN)**는 이미지나 영상처럼 **공간적인 구조를 가진 데이터**를 처리하기에 적합한 딥러닝 모델입니다. CNN은 사람의 시각 피질(Visual Cortex)을 모방하여 개발되었으며, 특히 **이미지 분류, 객체 탐지, 얼굴 인식, 자율주행차의 시각 시스템** 등에 매우 널리 활용되고 있습니다.

---

### 📷 예시로 이해하기: 이미지 분류 문제

예를 들어, 고양이와 강아지를 구분하는 AI를 만들고 싶다고 해봅시다.

1. **입력 데이터**는 고양이 또는 강아지 사진입니다.
2. **CNN은** 이 사진의 모양, 색상, 윤곽선 등의 특징을 자동으로 학습합니다.
3. **결과 출력**은 이 이미지가 고양이인지 강아지인지 분류하는 확률 값입니다.

이러한 작업을 가능하게 만드는 것이 CNN의 내부 구조입니다.

---

### 🧩 왜 일반적인 신경망이 아닌 CNN을 써야 하나요?

일반적인 완전 연결 신경망(Fully Connected Neural Network, FCNN)을 사용하면:

- 이미지의 모든 픽셀을 한 줄로 펼쳐서 입력해야 하며,
- 너무 많은 파라미터로 인해 **계산량이 폭증**하고 **과적합 위험**이 커집니다.

CNN은 다음과 같은 방식으로 이를 해결합니다:

- **지역적 특성(local features)**만 추출해서 계산량을 줄임
- **파라미터 수를 공유**(weight sharing)하여 효율적 학습
- **계층 구조**를 통해 단순한 모양 → 윤곽선 → 물체 형태로 점점 고차원 특징을 학습

---

### 🧪 CNN의 기본 아이디어

CNN은 크게 다음과 같은 계층으로 구성됩니다:

1. **Convolution Layer (합성곱 계층)**  
   이미지의 일부분만을 필터로 스캔하며 특징 추출

2. **Activation Function (활성화 함수)**  
   일반적으로 ReLU를 사용하여 비선형성 추가

3. **Pooling Layer (풀링 계층)**  
   이미지 크기를 줄이고 중요한 특징만 남김 (예: Max Pooling)

4. **Fully Connected Layer (완전 연결 계층)**  
   추출된 특징을 바탕으로 최종 판단 수행

5. **Output Layer**  
   클래스별 확률을 출력 (Softmax 등 사용)

---

### 📈 CNN이 잘 작동하는 이유

- 공간 정보(위치, 방향 등)를 보존하면서 학습 가능
- 사전 특징 추출 없이도 **자동으로 특징(feature)을 학습**
- 학습 파라미터 수가 상대적으로 적음 → 학습 속도 빠름
- 이미지 외에도 **음성, 시계열 데이터, 영상 분석** 등에도 활용 가능

---

### 🔍 CNN을 배우면 할 수 있는 일들

- 고양이 vs 강아지 분류기 만들기
- 손글씨 숫자 인식 (MNIST)
- 자율주행 자동차의 교통 표지판 인식
- 의료 영상에서 종양 탐지
- 얼굴 인식 시스템 구현
- YouTube 영상에서 장면 자동 태깅 등

---

### 📌 요약

| 항목 | 내용 |
|------|------|
| 목적 | 이미지와 같은 시각 데이터를 분류하거나 특징을 추출 |
| 구조 | Convolution → Activation → Pooling → FC → Output |
| 장점 | 공간 정보 보존, 파라미터 수 감소, 자동 특징 추출 |
| 활용 분야 | 컴퓨터 비전, 영상 처리, 자율주행, 의료 AI 등 |

---

> 📝 **팁**: CNN은 단순히 '이미지 분류기'가 아니라, 다양한 감각 데이터를 이해하고 처리하는 **'인공지능의 눈'** 역할을 한다고 보면 됩니다.

